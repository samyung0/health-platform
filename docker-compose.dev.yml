services:
  postgres:
    image: postgres:18-alpine
    container_name: school-platform-dev-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - school-platform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # backend:
  #   build:
  #     context: .
  #     dockerfile: backend/Dockerfile
  #   container_name: school-platform-dev-backend
  #   restart: unless-stopped
  #   env_file:
  #     - .env.development
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - school-platform-network
  #   command: ["bun", "run", "dev"]

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: frontend/Dockerfile
  #     target: development
  #     args:
  #       NODE_ENV: development
  #   container_name: school-platform-dev-frontend
  #   restart: unless-stopped
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./frontend:/app/frontend
  #     - ./backend:/app/backend
  #     - /app/node_modules
  #     - /app/frontend/node_modules
  #     - /app/backend/node_modules
  #   environment:
  #     - VITE_BACKEND_URL=http://localhost:3000
  #   depends_on:
  #     - backend
  #   networks:
  #     - school-platform-network

volumes:
  postgres_data:
    driver: local

networks:
  school-platform-network:
    driver: bridge
